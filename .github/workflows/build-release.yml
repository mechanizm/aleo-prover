name: Rust CI

on:
  push:
    tags:
      - "*"

env:
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  rust:
    name: Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      LLVM_LINK_STATIC: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            artifact_name: aleo-prover
            asset_name: x86_64-unknown-linux-gnu
            suffix: "20"
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-musl
            artifact_name: aleo-prover
            asset_name: x86_64-unknown-linux-musl
            suffix: "18"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load Rust Cache
        uses: Swatinem/rust-cache@v1

      - name: Install CUDA 
        uses: Jimver/cuda-toolkit@v0.2.8
        id: cuda-toolkit
        with:
          cuda: '11.7'

      # random command that forces rustup to install stuff in rust-toolchain
      - name: add target
        run: rustup target add ${{ matrix.asset_name }}

      - name: Install rust-toolchain
        run: cargo version
        
      - name: Add rustup components
        run: rustup component add rustfmt clippy

      - name: Install LLVM 7
        if: contains(matrix.os, 'ubuntu')
        run: | 
            sudo apt-get install llvm-7
            sudo ln -s /usr/bin/llvm-config-7 /usr/local/bin/llvm-config

      - name: Rustfmt
        if: contains(matrix.os, 'ubuntu')
        run: cargo fmt --all -- --check

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Build
        run: cargo build --all-features --release --target ${{ matrix.asset_name }}

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.asset_name }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.suffix }}${{ matrix.artifact_name }}
          tag: ${{ github.ref }}
          overwrite: true

  
